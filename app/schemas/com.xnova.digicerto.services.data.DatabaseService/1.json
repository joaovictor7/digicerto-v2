{
  "formatVersion": 1,
  "database": {
    "version": 1,
    "identityHash": "e4ef18c49896a38cb9389c9d73666dd2",
    "entities": [
      {
        "tableName": "Driver",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`Code` INTEGER NOT NULL, `Name` TEXT NOT NULL, `Active` INTEGER NOT NULL, PRIMARY KEY(`Code`))",
        "fields": [
          {
            "fieldPath": "code",
            "columnName": "Code",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "Name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "active",
            "columnName": "Active",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "Code"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Occurrence",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`Code` INTEGER NOT NULL, `Active` INTEGER NOT NULL, `Type` TEXT NOT NULL, `Description` TEXT NOT NULL, PRIMARY KEY(`Code`))",
        "fields": [
          {
            "fieldPath": "code",
            "columnName": "Code",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "active",
            "columnName": "Active",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "Type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "Description",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "Code"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Producer",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`Code` INTEGER NOT NULL, `FarmCode` INTEGER NOT NULL, `Active` INTEGER NOT NULL, `Name` TEXT NOT NULL, `FarmName` TEXT, `AvgVolume` REAL, `TankType` TEXT NOT NULL, `TankCode` INTEGER, `Note` TEXT, PRIMARY KEY(`Code`, `FarmCode`))",
        "fields": [
          {
            "fieldPath": "code",
            "columnName": "Code",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "farmCode",
            "columnName": "FarmCode",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "active",
            "columnName": "Active",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "Name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "farmName",
            "columnName": "FarmName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "avgVolume",
            "columnName": "AvgVolume",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "tankType",
            "columnName": "TankType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "tankCode",
            "columnName": "TankCode",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "note",
            "columnName": "Note",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "Code",
            "FarmCode"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "RouteProducer",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`RouteCode` INTEGER NOT NULL, `ProducerCode` INTEGER NOT NULL, `ProducerFarmCode` INTEGER NOT NULL, `Sequence` INTEGER NOT NULL, PRIMARY KEY(`RouteCode`, `ProducerCode`, `ProducerFarmCode`))",
        "fields": [
          {
            "fieldPath": "routeCode",
            "columnName": "RouteCode",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "producerCode",
            "columnName": "ProducerCode",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "producerFarmCode",
            "columnName": "ProducerFarmCode",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sequence",
            "columnName": "Sequence",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "RouteCode",
            "ProducerCode",
            "ProducerFarmCode"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Route",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`Code` INTEGER NOT NULL, `Active` INTEGER NOT NULL, `Name` TEXT NOT NULL, PRIMARY KEY(`Code`))",
        "fields": [
          {
            "fieldPath": "code",
            "columnName": "Code",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "active",
            "columnName": "Active",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "Name",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "Code"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Vehicle",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`Code` INTEGER NOT NULL, `Plate` TEXT NOT NULL, `Active` INTEGER NOT NULL, PRIMARY KEY(`Code`))",
        "fields": [
          {
            "fieldPath": "code",
            "columnName": "Code",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "plate",
            "columnName": "Plate",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "active",
            "columnName": "Active",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "Code"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "VehicleCompartment",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`VehicleCode` INTEGER NOT NULL, `Compartment` INTEGER NOT NULL, `Capacity` INTEGER NOT NULL, PRIMARY KEY(`VehicleCode`, `Compartment`))",
        "fields": [
          {
            "fieldPath": "vehicleCode",
            "columnName": "VehicleCode",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "compartment",
            "columnName": "Compartment",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "capacity",
            "columnName": "Capacity",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "VehicleCode",
            "Compartment"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Settings",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`Id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `OperationType` TEXT, `Email` TEXT, `LatestSync` TEXT, `File_CollectCancelled` INTEGER NOT NULL, `Travel_Type` TEXT NOT NULL, `Travel_ProducerCodeReading` INTEGER NOT NULL, `Travel_WildcardProducer` INTEGER NOT NULL, `Travel_Transhipment` INTEGER NOT NULL, `Travel_TravelCodeReading` TEXT NOT NULL, `Travel_PlatformMeasure` TEXT NOT NULL, `Travel_MilkDensity` TEXT NOT NULL, `Travel_AwaitDischarge` INTEGER NOT NULL, `Travel_OdometerRegister` TEXT NOT NULL, `Collect_CollectiveTankCollection` TEXT NOT NULL, `Collect_RegisterSample` TEXT NOT NULL, `Collect_AcidMilk` INTEGER NOT NULL, `Collect_TemperaturePicture` INTEGER NOT NULL, `Collect_ProductionTolerancePercentage` REAL, `FTP_Host` TEXT, `FTP_Port` INTEGER, `FTP_Username` TEXT, `FTP_Password` TEXT, `FTP_Folder` TEXT, `WS_Host` TEXT, `WS_Port` INTEGER, `WS_Username` TEXT, `WS_Password` TEXT, `Printer_UsePrinter` INTEGER NOT NULL, `Printer_Dupplicate` TEXT NOT NULL, `Printer_CollectCancelled` INTEGER NOT NULL, `Printer_Layout` TEXT NOT NULL, `Printer_Printer` TEXT, `Printer_MacAddress` TEXT, `Printer_PrintScale` INTEGER NOT NULL, `Printer_PrintCompartments` INTEGER NOT NULL, `Printer_PrintSample` INTEGER NOT NULL, `Printer_PrintTemperature` INTEGER NOT NULL, `Printer_PrintOccurrence` INTEGER NOT NULL, `Printer_PrintAlizarol` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "Id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "operationType",
            "columnName": "OperationType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "email",
            "columnName": "Email",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "latestSync",
            "columnName": "LatestSync",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "fileSettings.collectCancelled",
            "columnName": "File_CollectCancelled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "travelSettings.type",
            "columnName": "Travel_Type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "travelSettings.producerCodeReading",
            "columnName": "Travel_ProducerCodeReading",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "travelSettings.wildcardProducer",
            "columnName": "Travel_WildcardProducer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "travelSettings.transhipment",
            "columnName": "Travel_Transhipment",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "travelSettings.travelCodeReading",
            "columnName": "Travel_TravelCodeReading",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "travelSettings.platformMeasure",
            "columnName": "Travel_PlatformMeasure",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "travelSettings.milkDensity",
            "columnName": "Travel_MilkDensity",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "travelSettings.awaitDischarge",
            "columnName": "Travel_AwaitDischarge",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "travelSettings.odometerRegister",
            "columnName": "Travel_OdometerRegister",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "collectSettings.collectiveTankCollection",
            "columnName": "Collect_CollectiveTankCollection",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "collectSettings.registerSample",
            "columnName": "Collect_RegisterSample",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "collectSettings.acidMilk",
            "columnName": "Collect_AcidMilk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "collectSettings.temperaturePicture",
            "columnName": "Collect_TemperaturePicture",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "collectSettings.productionTolerancePercentage",
            "columnName": "Collect_ProductionTolerancePercentage",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "ftpSettings.host",
            "columnName": "FTP_Host",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "ftpSettings.port",
            "columnName": "FTP_Port",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "ftpSettings.username",
            "columnName": "FTP_Username",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "ftpSettings.password",
            "columnName": "FTP_Password",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "ftpSettings.folder",
            "columnName": "FTP_Folder",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "wsSettings.host",
            "columnName": "WS_Host",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "wsSettings.port",
            "columnName": "WS_Port",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "wsSettings.username",
            "columnName": "WS_Username",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "wsSettings.password",
            "columnName": "WS_Password",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "printerSettings.usePrinter",
            "columnName": "Printer_UsePrinter",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "printerSettings.dupplicate",
            "columnName": "Printer_Dupplicate",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "printerSettings.collectCancelled",
            "columnName": "Printer_CollectCancelled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "printerSettings.layoutPrinter",
            "columnName": "Printer_Layout",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "printerSettings.printerData.printer",
            "columnName": "Printer_Printer",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "printerSettings.printerData.macAddress",
            "columnName": "Printer_MacAddress",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "printerSettings.dataPrint.printScale",
            "columnName": "Printer_PrintScale",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "printerSettings.dataPrint.printCompartments",
            "columnName": "Printer_PrintCompartments",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "printerSettings.dataPrint.printSample",
            "columnName": "Printer_PrintSample",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "printerSettings.dataPrint.printTemperature",
            "columnName": "Printer_PrintTemperature",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "printerSettings.dataPrint.printOccurrence",
            "columnName": "Printer_PrintOccurrence",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "printerSettings.dataPrint.printAlizarol",
            "columnName": "Printer_PrintAlizarol",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "Id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Credential",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`Username` TEXT NOT NULL, `Id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `Password` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "username",
            "columnName": "Username",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "id",
            "columnName": "Id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "password",
            "columnName": "Password",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "Id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, 'e4ef18c49896a38cb9389c9d73666dd2')"
    ]
  }
}